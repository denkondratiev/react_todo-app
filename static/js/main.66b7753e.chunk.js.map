{"version":3,"sources":["Shapes.js","components/TodoInput/TodoInput.js","components/Header/Header.js","components/Todo/Todo.js","components/TodoList/TodoList.js","components/TodosFilter/TodosFilter.js","components/Footer/Footer.js","components/ToggleAll/ToggleAll.js","App.js","index.js"],"names":["TodoShape","PropTypes","shape","addTodo","func","id","number","title","string","completed","bool","checkedTodo","deleteTodo","todos","arrayOf","isRequired","toggleAll","setActiveTab","activeTab","clearCompleted","TodoInput","state","error","setTitle","value","setState","replace","handleSubmit","event","preventDefault","props","trim","uuidv4","this","className","onSubmit","type","name","maxLength","placeholder","onChange","target","React","Component","Header","Todo","isEdit","editingTitle","tempTitle","editId","focusInput","createRef","setEditingTitle","onDoubleClick","currentId","prevState","onBlurInput","onKeyPressed","keyCode","current","focus","classes","classnames","editing","checked","htmlFor","onClick","ref","onKeyUp","onBlur","TodoList","map","todo","key","TodosFilter","item","href","selected","toUpperCase","Footer","completedLength","filter","length","uncompletedLength","ToggleAll","allSelected","App","JSON","parse","localStorage","getItem","setItem","stringify","every","visibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66b7753e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const HeaderShape = PropTypes.shape({\n  addTodo: PropTypes.func,\n});\n\nexport const TodoShape = PropTypes.shape({\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  checkedTodo: PropTypes.func,\n  deleteTodo: PropTypes.func,\n});\n\nexport const TodoInputShape = PropTypes.shape({\n  addTodo: PropTypes.func,\n});\n\nexport const TodoListShape = PropTypes.shape({\n  todos: PropTypes.arrayOf(TodoShape.isRequired),\n  checkedTodo: PropTypes.func,\n  deleteTodo: PropTypes.func,\n});\n\nexport const ToggleAllShape = PropTypes.shape({\n  toggleAll: PropTypes.func,\n});\n\nexport const TodosFilterShape = PropTypes.shape({\n  setActiveTab: PropTypes.func,\n  activeTab: PropTypes.string,\n});\n\nexport const FooterShape = PropTypes.shape({\n  todos: PropTypes.arrayOf(TodoShape.isRequired),\n  clearCompleted: PropTypes.func,\n  setActiveTab: PropTypes.func,\n  activeTab: PropTypes.string,\n});\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { TodoInputShape } from '../../Shapes';\n\nexport class TodoInput extends React.Component {\n  state = {\n    title: '',\n    error: false,\n  }\n\n  setTitle = (value) => {\n    this.setState({\n      title: value.replace(/\\s/g, ' ').replace(/^\\s/, ''),\n      error: false,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title } = this.state;\n    const { addTodo } = this.props;\n\n    if (!title || title.trim() === '') {\n      this.setState({\n        error: true,\n      });\n\n      return false;\n    }\n\n    addTodo({\n      title,\n      id: uuidv4(),\n      completed: false,\n    });\n\n    this.setState({\n      title: '',\n      error: false,\n    });\n\n    return true;\n  }\n\n  render() {\n    const { title, error } = this.state;\n\n    return (\n      <>\n        {\n          error && (\n            <div className=\"form-error\">\n              Please add something\n            </div>\n          )\n        }\n        <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n          <input\n            type=\"text\"\n            name=\"todo\"\n            maxLength=\"100\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={event => this.setTitle(event.target.value)}\n          />\n        </form>\n      </>\n    );\n  }\n}\n\nTodoInput.propTypes = TodoInputShape.isRequired;\n","import React from 'react';\nimport { HeaderShape } from '../../Shapes';\nimport { TodoInput } from '../TodoInput/TodoInput';\n\nexport const Header = (props) => {\n  const { addTodo } = props;\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <TodoInput addTodo={addTodo} />\n    </header>\n  );\n};\n\nHeader.propTypes = HeaderShape.isRequired;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { TodoShape } from '../../Shapes';\n\nexport class Todo extends React.Component {\n  state = {\n    isEdit: false,\n    editingTitle: this.props.title,\n    tempTitle: null,\n    editId: null,\n  }\n\n  focusInput = React.createRef();\n\n  componentDidUpdate() {\n    if (this.focusInput) {\n      this.focusInput.current.focus();\n    }\n  }\n\n  setEditingTitle = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      editingTitle: value.replace(/\\s/g, ' ').replace(/^\\s/, ''),\n    });\n  }\n\n  onDoubleClick = (currentId) => {\n    this.setState(prevState => ({\n      isEdit: !prevState.isEdit,\n      editId: currentId,\n      tempTitle: prevState.editingTitle,\n    }));\n  }\n\n  onBlurInput = () => {\n    this.setState(prevState => ({\n      editingTitle: prevState.tempTitle,\n      isEdit: false,\n    }));\n  }\n\n  onKeyPressed = (event) => {\n    const { editId, editingTitle } = this.state;\n    const { deleteTodo } = this.props;\n\n    if (event.keyCode === 13) {\n      if (!editingTitle || editingTitle.trim() === '') {\n        deleteTodo(editId);\n      }\n\n      this.onDoubleClick(editId);\n    }\n\n    if (event.keyCode === 27) {\n      this.onBlurInput();\n    }\n  }\n\n  render() {\n    const {\n      id,\n      completed,\n      checkedTodo,\n      deleteTodo,\n    } = this.props;\n\n    const { isEdit, editingTitle } = this.state;\n\n    const classes = classnames({\n      editing: isEdit, completed,\n    });\n\n    return (\n      <li\n        className={classes}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            name=\"todo\"\n            className=\"toggle\"\n            checked={completed}\n            id={id}\n            onChange={event => checkedTodo(event.target.id)}\n          />\n          <label\n            htmlFor={id}\n            onDoubleClick={event => this.onDoubleClick(event.target.htmlFor)}\n          >\n            {editingTitle}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            id={id}\n            onClick={event => deleteTodo(event.target.id)}\n          />\n        </div>\n        <input\n          type=\"text\"\n          name=\"editInput\"\n          className=\"edit\"\n          value={editingTitle}\n          ref={this.focusInput}\n          onChange={event => this.setEditingTitle(event)}\n          onKeyUp={event => this.onKeyPressed(event)}\n          onBlur={this.onBlurInput}\n        />\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = TodoShape.isRequired;\n","import React from 'react';\nimport { TodoListShape } from '../../Shapes';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = (props) => {\n  const { todos, checkedTodo, deleteTodo } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          key={todo.id}\n          id={todo.id}\n          completed={todo.completed}\n          title={todo.title}\n          checkedTodo={checkedTodo}\n          deleteTodo={deleteTodo}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = TodoListShape.isRequired;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { TodosFilterShape } from '../../Shapes';\n\nexport const TodosFilter = (props) => {\n  const { setActiveTab, activeTab } = props;\n\n  const filters = ['all', 'active', 'completed'];\n\n  return (\n    <ul className=\"filters\">\n      {filters.map(item => (\n        <li key={item}>\n          <a\n            href=\"#/\"\n            name={item}\n            className={classnames({ selected: activeTab === item })}\n            onClick={event => setActiveTab(event.target.name)}\n          >\n            {item.toUpperCase()}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nTodosFilter.propTypes = TodosFilterShape.isRequired;\n","import React from 'react';\nimport { FooterShape } from '../../Shapes';\nimport { TodosFilter } from '../TodosFilter/TodosFilter';\n\nexport const Footer = (props) => {\n  const {\n    todos,\n    clearCompleted,\n    setActiveTab,\n    activeTab,\n  } = props;\n\n  const completedLength = todos.filter(todo => todo.completed).length;\n  const uncompletedLength = todos.length - completedLength;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${uncompletedLength} items left`}\n      </span>\n      <TodosFilter\n        setActiveTab={setActiveTab}\n        activeTab={activeTab}\n      />\n      {completedLength > 0 && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={clearCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = FooterShape.isRequired;\n","import React from 'react';\nimport { ToggleAllShape } from '../../Shapes';\n\nexport const ToggleAll = (props) => {\n  const { toggleAll, allSelected } = props;\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={allSelected}\n        onChange={event => toggleAll(event)}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    </>\n  );\n};\n\nToggleAll.propTypes = ToggleAllShape.isRequired;\n","import React from 'react';\nimport { Header } from './components/Header/Header';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Footer } from './components/Footer/Footer';\nimport { ToggleAll } from './components/ToggleAll/ToggleAll';\n\nclass App extends React.Component {\n  state = {\n    todos: JSON.parse(localStorage.getItem('storage')) || [],\n    activeTab: 'all',\n  }\n\n  componentDidUpdate() {\n    const { todos } = this.state;\n\n    localStorage.setItem('storage', JSON.stringify(todos));\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        todo,\n      ],\n    }));\n  };\n\n  deleteTodo = (currentId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== currentId),\n    }));\n  }\n\n  checkedTodo = (currentId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === currentId) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  toggleAll = (event) => {\n    const { checked } = event.target;\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: checked,\n      })),\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  setActiveTab = (name) => {\n    this.setState({\n      activeTab: name,\n    });\n  }\n\n  render() {\n    const { todos, activeTab } = this.state;\n\n    const allSelected = todos.every(todo => todo.completed);\n\n    let visibleTodos = [];\n\n    switch (activeTab) {\n      case 'active':\n        visibleTodos = todos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        visibleTodos = todos.filter(todo => todo.completed);\n        break;\n      default:\n        visibleTodos = todos;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={this.addTodo} />\n        <section className=\"main\">\n          {todos.length > 0 && (\n            <ToggleAll\n              toggleAll={this.toggleAll}\n              allSelected={allSelected}\n            />\n          )}\n          <TodoList\n            todos={visibleTodos}\n            checkedTodo={this.checkedTodo}\n            deleteTodo={this.deleteTodo}\n          />\n        </section>\n        {todos.length > 0 && (\n          <Footer\n            todos={todos}\n            clearCompleted={this.clearCompleted}\n            setActiveTab={this.setActiveTab}\n            activeTab={activeTab}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}