{"version":3,"sources":["Shapes.js","components/TodoInput/TodoInput.js","components/Header/Header.js","components/Todo/Todo.js","components/TodoList/TodoList.js","components/TodosFilter/TodosFilter.js","components/Footer/Footer.js","components/ToggleAll/ToggleAll.js","App.js","index.js"],"names":["TodoShape","PropTypes","shape","addTodo","func","id","number","title","string","completed","bool","checkedTodo","deleteTodo","todos","arrayOf","isRequired","toggleAll","setActiveTab","activeTab","clearCompleted","TodoInput","state","error","setTitle","value","setState","replace","handleSubmit","event","preventDefault","props","uuidv4","this","className","onSubmit","type","name","maxLength","placeholder","onChange","target","React","Component","Header","Todo","isEdit","editTitle","tempTitle","editId","focusInput","createRef","setEditTitle","onDoubleClick","currentId","prevState","onBlurInput","onKeyPressed","keyCode","current","focus","classes","classnames","editing","checked","htmlFor","onClick","ref","onKeyUp","onBlur","TodoList","map","todo","key","TodosFilter","href","Footer","completedLength","filter","length","uncompletedLength","ToggleAll","allSelected","App","JSON","parse","localStorage","getItem","setItem","stringify","every","visibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86b68f5b.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const HeaderShape = PropTypes.shape({\n  addTodo: PropTypes.func,\n});\n\nexport const TodoShape = PropTypes.shape({\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  checkedTodo: PropTypes.func,\n  deleteTodo: PropTypes.func,\n});\n\nexport const TodoInputShape = PropTypes.shape({\n  addTodo: PropTypes.func,\n});\n\nexport const TodoListShape = PropTypes.shape({\n  todos: PropTypes.arrayOf(TodoShape.isRequired),\n  checkedTodo: PropTypes.func,\n  deleteTodo: PropTypes.func,\n});\n\nexport const ToggleAllShape = PropTypes.shape({\n  toggleAll: PropTypes.func,\n});\n\nexport const TodosFilterShape = PropTypes.shape({\n  setActiveTab: PropTypes.func,\n  activeTab: PropTypes.string,\n});\n\nexport const FooterShape = PropTypes.shape({\n  todos: PropTypes.arrayOf(TodoShape.isRequired),\n  clearCompleted: PropTypes.func,\n  setActiveTab: PropTypes.func,\n  activeTab: PropTypes.string,\n});\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { TodoInputShape } from '../../Shapes';\n\nexport class TodoInput extends React.Component {\n  state = {\n    title: '',\n    error: false,\n  }\n\n  setTitle = (value) => {\n    this.setState({\n      title: value.replace(/\\s/g, ' ').replace(/^\\s/, ''),\n      error: false,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title } = this.state;\n    const { addTodo } = this.props;\n\n    if (!title) {\n      this.setState({\n        error: true,\n      });\n\n      return false;\n    }\n\n    addTodo({\n      title,\n      id: uuidv4(),\n      completed: false,\n    });\n\n    this.setState({\n      title: '',\n      error: false,\n    });\n\n    return true;\n  }\n\n  render() {\n    const { title, error } = this.state;\n\n    return (\n      <>\n        {\n          error && (\n            <div className=\"form-error\">\n              Please add something\n            </div>\n          )\n        }\n        <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n          <input\n            type=\"text\"\n            name=\"todo\"\n            maxLength=\"100\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={event => this.setTitle(event.target.value)}\n          />\n        </form>\n      </>\n    );\n  }\n}\n\nTodoInput.propTypes = TodoInputShape.isRequired;\n","import React from 'react';\nimport { HeaderShape } from '../../Shapes';\nimport { TodoInput } from '../TodoInput/TodoInput';\n\nexport const Header = (props) => {\n  const { addTodo } = props;\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <TodoInput addTodo={addTodo} />\n    </header>\n  );\n};\n\nHeader.propTypes = HeaderShape.isRequired;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { TodoShape } from '../../Shapes';\n\nexport class Todo extends React.Component {\n  state = {\n    isEdit: false,\n    editTitle: this.props.title,\n    tempTitle: null,\n    editId: null,\n  }\n\n  focusInput = React.createRef();\n\n  componentDidUpdate() {\n    if (this.focusInput) {\n      this.focusInput.current.focus();\n    }\n  }\n\n  setEditTitle = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      editTitle: value.replace(/\\s/g, ' ').replace(/^\\s/, ''),\n    });\n  }\n\n  onDoubleClick = (currentId) => {\n    this.setState(prevState => ({\n      isEdit: !prevState.isEdit,\n      editId: currentId,\n      tempTitle: prevState.editTitle,\n    }));\n  }\n\n  onBlurInput = () => {\n    this.setState(prevState => ({\n      editTitle: prevState.tempTitle,\n      isEdit: false,\n    }));\n  }\n\n  onKeyPressed = (event) => {\n    const { editId, editTitle } = this.state;\n    const { deleteTodo } = this.props;\n\n    if (event.keyCode === 13) {\n      event.preventDefault();\n\n      if (!editTitle) {\n        deleteTodo(editId);\n      }\n\n      this.onDoubleClick(editId);\n    }\n\n    if (event.keyCode === 27) {\n      this.onBlurInput();\n    }\n  }\n\n  render() {\n    const {\n      id,\n      completed,\n      checkedTodo,\n      deleteTodo,\n    } = this.props;\n\n    const { isEdit, editTitle } = this.state;\n\n    const classes = classnames({\n      editing: isEdit === true, completed: completed === true,\n    });\n\n    return (\n      <li\n        className={classes}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            name=\"todo\"\n            className=\"toggle\"\n            checked={completed}\n            id={id}\n            onChange={event => checkedTodo(event.target.id)}\n          />\n          <label\n            htmlFor={id}\n            onDoubleClick={event => this.onDoubleClick(event.target.htmlFor)}\n          >\n            {editTitle}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            id={id}\n            onClick={event => deleteTodo(event.target.id)}\n          />\n        </div>\n        <input\n          type=\"text\"\n          name=\"editInput\"\n          className=\"edit\"\n          value={editTitle}\n          ref={this.focusInput}\n          onChange={event => this.setEditTitle(event)}\n          onKeyUp={event => this.onKeyPressed(event)}\n          onBlur={this.onBlurInput}\n        />\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = TodoShape.isRequired;\n","import React from 'react';\nimport { TodoListShape } from '../../Shapes';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = (props) => {\n  const { todos, checkedTodo, deleteTodo } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          key={todo.id}\n          id={todo.id}\n          completed={todo.completed}\n          title={todo.title}\n          checkedTodo={checkedTodo}\n          deleteTodo={deleteTodo}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = TodoListShape.isRequired;\n","import React from 'react';\nimport { TodosFilterShape } from '../../Shapes';\n\nexport const TodosFilter = (props) => {\n  const { setActiveTab, activeTab } = props;\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          name=\"all\"\n          className={`${activeTab === 'all' ? 'selected' : ''}`}\n          onClick={event => setActiveTab(event.target.name)}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          name=\"active\"\n          className={`${activeTab === 'active' ? 'selected' : ''}`}\n          onClick={event => setActiveTab(event.target.name)}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          name=\"completed\"\n          className={`${activeTab === 'completed' ? 'selected' : ''}`}\n          onClick={event => setActiveTab(event.target.name)}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nTodosFilter.propTypes = TodosFilterShape.isRequired;\n","import React from 'react';\nimport { FooterShape } from '../../Shapes';\nimport { TodosFilter } from '../TodosFilter/TodosFilter';\n\nexport const Footer = (props) => {\n  const {\n    todos,\n    clearCompleted,\n    setActiveTab,\n    activeTab,\n  } = props;\n\n  const completedLength = todos.filter(todo => todo.completed).length;\n  const uncompletedLength = todos.length - completedLength;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${uncompletedLength} items left`}\n      </span>\n      <TodosFilter\n        setActiveTab={setActiveTab}\n        activeTab={activeTab}\n      />\n      {completedLength > 0 && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={clearCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = FooterShape.isRequired;\n","import React from 'react';\nimport { ToggleAllShape } from '../../Shapes';\n\nexport const ToggleAll = (props) => {\n  const { toggleAll, allSelected } = props;\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={allSelected}\n        onClick={event => toggleAll(event)}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    </>\n  );\n};\n\nToggleAll.propTypes = ToggleAllShape.isRequired;\n","import React from 'react';\nimport { Header } from './components/Header/Header';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Footer } from './components/Footer/Footer';\nimport { ToggleAll } from './components/ToggleAll/ToggleAll';\n\nclass App extends React.Component {\n  state = {\n    todos: JSON.parse(localStorage.getItem('storage')) || [],\n    activeTab: '',\n  }\n\n  componentDidUpdate() {\n    const { todos } = this.state;\n\n    localStorage.setItem('storage', JSON.stringify(todos));\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        todo,\n      ],\n    }));\n  };\n\n  deleteTodo = (currentId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== currentId),\n    }));\n  }\n\n  checkedTodo = (currentId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === currentId) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  toggleAll = (event) => {\n    const { checked } = event.target;\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: checked,\n      })),\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  setActiveTab = (name) => {\n    this.setState({\n      activeTab: name,\n    });\n  }\n\n  render() {\n    const { todos, activeTab } = this.state;\n\n    const allSelected = todos.every(todo => todo.completed);\n\n    let visibleTodos = [];\n\n    switch (activeTab) {\n      case 'active':\n        visibleTodos = todos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        visibleTodos = todos.filter(todo => todo.completed);\n        break;\n      case 'all':\n      default:\n        visibleTodos = todos;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={this.addTodo} />\n        <section className=\"main\">\n          {todos.length > 0 && (\n            <ToggleAll\n              toggleAll={this.toggleAll}\n              allSelected={allSelected}\n            />\n          )}\n          <TodoList\n            todos={visibleTodos}\n            checkedTodo={this.checkedTodo}\n            deleteTodo={this.deleteTodo}\n          />\n        </section>\n        {todos.length > 0 && (\n          <Footer\n            todos={todos}\n            clearCompleted={this.clearCompleted}\n            setActiveTab={this.setActiveTab}\n            activeTab={activeTab}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}