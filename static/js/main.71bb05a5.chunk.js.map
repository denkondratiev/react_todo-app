{"version":3,"sources":["Shapes.js","components/TodoInput/TodoInput.js","components/Header/Header.js","components/Todo/Todo.js","components/TodoList/TodoList.js","components/TodosFilter/TodosFilter.js","components/Footer/Footer.js","components/ToggleAll/ToggleAll.js","App.js","index.js"],"names":["TodoShape","PropTypes","shape","addTodo","func","id","number","title","string","completed","bool","checkedTodo","deleteTodo","todos","arrayOf","isRequired","toggleAll","setActiveTab","activeTab","clearCompleted","TodoInput","state","error","setTitle","value","setState","replace","handleSubmit","event","preventDefault","props","uuidv4","this","className","onSubmit","type","name","maxLength","placeholder","onChange","target","React","Component","Header","Todo","todo","checked","htmlFor","onClick","TodoList","map","key","TodosFilter","href","Footer","completedTodos","filter","uncompletedTodos","length","ToggleAll","App","allSelected","prevState","currentId","visibleTodos","ReactDOM","render","document","getElementById"],"mappings":"wTAMaA,GAJcC,IAAUC,MAAM,CACzCC,QAASF,IAAUG,OAGIH,IAAUC,MAAM,CACvCG,GAAIJ,IAAUK,OACdC,MAAON,IAAUO,OACjBC,UAAWR,IAAUS,KACrBC,YAAaV,IAAUG,KACvBQ,WAAYX,IAAUG,Q,GAGMH,IAAUC,MAAM,CAC5CC,QAASF,IAAUG,OAGQH,IAAUC,MAAM,CAC3CW,MAAOZ,IAAUa,QAAQd,EAAUe,YACnCJ,YAAaV,IAAUG,KACvBQ,WAAYX,IAAUG,OAGMH,IAAUC,MAAM,CAC5Cc,UAAWf,IAAUG,OAGSH,IAAUC,MAAM,CAC9Ce,aAAchB,IAAUG,KACxBc,UAAWjB,IAAUO,SAGIP,IAAUC,MAAM,CACzCW,MAAOZ,IAAUa,QAAQd,EAAUe,YACnCI,eAAgBlB,IAAUG,KAC1Ba,aAAchB,IAAUG,KACxBc,UAAWjB,IAAUO,S,OCjCVY,EAAb,4MACEC,MAAQ,CACNd,MAAO,GACPe,OAAO,GAHX,EAMEC,SAAW,SAACC,GACV,EAAKC,SAAS,CACZlB,MAAOiB,EAAME,QAAQ,MAAO,KAAKA,QAAQ,MAAO,IAChDJ,OAAO,KATb,EAaEK,aAAe,SAACC,GACdA,EAAMC,iBADkB,IAGhBtB,EAAU,EAAKc,MAAfd,MACAJ,EAAY,EAAK2B,MAAjB3B,QAER,OAAKI,GAQLJ,EAAQ,CACNI,QACAF,GAAI0B,cACJtB,WAAW,IAGb,EAAKgB,SAAS,CACZlB,MAAO,GACPe,OAAO,KAGF,IAlBL,EAAKG,SAAS,CACZH,OAAO,KAGF,IAxBb,uDAyCY,IAAD,SACkBU,KAAKX,MAAtBd,EADD,EACCA,MAAOe,EADR,EACQA,MAEf,OACE,oCAEIA,GACE,yBAAKW,UAAU,cAAf,wBAKJ,0BAAMA,UAAU,OAAOC,SAAU,SAAAN,GAAK,OAAI,EAAKD,aAAaC,KAC1D,2BACEO,KAAK,OACLC,KAAK,OACLC,UAAU,MACVJ,UAAU,WACVK,YAAY,yBACZd,MAAOjB,EACPgC,SAAU,SAAAX,GAAK,OAAI,EAAKL,SAASK,EAAMY,OAAOhB,gBA7D1D,GAA+BiB,IAAMC,WCAxBC,EAAS,SAACb,GAAW,IACxB3B,EAAY2B,EAAZ3B,QAER,OACE,4BAAQ8B,UAAU,UAChB,qCACA,kBAAC,EAAD,CAAW9B,QAASA,MCPbyC,EAAO,SAACd,GAAW,IAAD,EAKzBA,EAHFe,KAAQxC,EAFmB,EAEnBA,GAAIE,EAFe,EAEfA,MAAOE,EAFQ,EAERA,UACnBE,EAEEmB,EAFFnB,YACAC,EACEkB,EADFlB,WAGF,OACE,oCACE,yBAAKqB,UAAU,QACb,2BACEE,KAAK,WACLC,KAAK,OACLH,UAAU,SACVa,QAASrC,EACTJ,GAAIA,EACJkC,SAAU,SAAAX,GAAK,OAAIjB,EAAYiB,EAAMY,OAAOnC,OAE9C,2BAAO0C,QAAS1C,GAAKE,GACrB,4BACE4B,KAAK,SACL9B,GAAIA,EACJ4B,UAAU,UACVe,QAAS,SAAApB,GAAK,OAAIhB,EAAWgB,EAAMY,OAAOnC,QAG9C,2BACE8B,KAAK,OACLF,UAAU,WC3BLgB,EAAW,SAACnB,GAAW,IAC1BjB,EAAmCiB,EAAnCjB,MAAOF,EAA4BmB,EAA5BnB,YAAaC,EAAekB,EAAflB,WAE5B,OACE,wBAAIqB,UAAU,aACXpB,EAAMqC,KAAI,SAAAL,GAAI,OACb,wBAAIM,IAAKN,EAAKxC,GAAI4B,UAAS,UAAKY,EAAKpC,UAAL,YAA+B,KAC7D,kBAAC,EAAD,CACEoC,KAAMA,EACNlC,YAAaA,EACbC,WAAYA,UCXXwC,EAAc,SAACtB,GAAW,IAC7Bb,EAA4Ba,EAA5Bb,aAAcC,EAAcY,EAAdZ,UAEtB,OACE,wBAAIe,UAAU,WACZ,4BACE,uBACEoB,KAAK,KACLjB,KAAK,MACLH,UAAS,UAAmB,QAAdf,EAAsB,WAAa,IACjD8B,QAAS,SAAApB,GAAK,OAAIX,EAAaW,EAAMY,OAAOJ,QAJ9C,QAUF,4BACE,uBACEiB,KAAK,WACLjB,KAAK,SACLH,UAAS,UAAmB,WAAdf,EAAyB,WAAa,IACpD8B,QAAS,SAAApB,GAAK,OAAIX,EAAaW,EAAMY,OAAOJ,QAJ9C,WAUF,4BACE,uBACEiB,KAAK,cACLjB,KAAK,YACLH,UAAS,UAAmB,cAAdf,EAA4B,WAAa,IACvD8B,QAAS,SAAApB,GAAK,OAAIX,EAAaW,EAAMY,OAAOJ,QAJ9C,gBC3BKkB,EAAS,SAACxB,GAAW,IAE9BjB,EAIEiB,EAJFjB,MACAM,EAGEW,EAHFX,eACAF,EAEEa,EAFFb,aACAC,EACEY,EADFZ,UAGIqC,EAAiB1C,EAAM2C,QAAO,SAAAX,GAAI,OAAIA,EAAKpC,aAC3CgD,EAAmB5C,EAAM2C,QAAO,SAAAX,GAAI,OAAKA,EAAKpC,aAEpD,OACE,4BAAQwB,UAAU,UAChB,0BAAMA,UAAU,cAAhB,UACMwB,EAAiBC,OADvB,gBAGA,kBAAC,EAAD,CACEzC,aAAcA,EACdC,UAAWA,IAEZqC,EAAeG,OAAS,GACvB,4BACEvB,KAAK,SACLF,UAAU,kBACVe,QAAS,kBAAM7B,MAHjB,qBCtBKwC,EAAY,SAAC7B,GAAW,IAC3Bd,EAAcc,EAAdd,UAER,OACE,oCACE,2BACEmB,KAAK,WACL9B,GAAG,aACH4B,UAAU,aACVe,QAAShC,IAEX,2BAAO+B,QAAQ,cAAf,0BC4FSa,E,4MAnGbvC,MAAQ,CACNR,MAAO,GACPK,UAAW,GACX2C,aAAa,G,EAGf1D,QAAU,SAAC0C,GACT,EAAKpB,UAAS,SAAAqC,GAAS,MAAK,CAC1BjD,MAAM,GAAD,mBACAiD,EAAUjD,OADV,CAEHgC,S,EAKNjC,WAAa,SAACmD,GACZ,EAAKtC,UAAS,SAAAqC,GAAS,MAAK,CAC1BjD,MAAOiD,EAAUjD,MAAM2C,QAAO,SAAAX,GAAI,OAAIA,EAAKxC,KAAO0D,U,EAItDpD,YAAc,SAACoD,GACb,EAAKtC,UAAS,SAAAqC,GAAS,MAAK,CAC1BjD,MAAOiD,EAAUjD,MAAMqC,KAAI,SAACL,GAC1B,OAAIA,EAAKxC,KAAO0D,EACP,2BACFlB,GADL,IAEEpC,WAAYoC,EAAKpC,YAIdoC,U,EAKb7B,UAAY,WACV,EAAKS,UAAS,SAAAqC,GAAS,MAAK,CAC1BjD,MAAOiD,EAAUjD,MAAMqC,KAAI,SAAAL,GAAI,kCAC1BA,GAD0B,IAE7BpC,UAAWqD,EAAUD,iBAEvBA,aAAcC,EAAUD,iB,EAI5B1C,eAAiB,WACf,EAAKM,UAAS,SAAAqC,GAAS,MAAK,CAC1BjD,MAAOiD,EAAUjD,MAAM2C,QAAO,SAAAX,GAAI,OAAKA,EAAKpC,kB,EAIhDQ,aAAe,SAACmB,GACd,EAAKX,SAAS,CACZP,UAAWkB,K,uDAIL,IAAD,EACsBJ,KAAKX,MAA1BR,EADD,EACCA,MAAOK,EADR,EACQA,UAEX8C,EAAe,GAEnB,OAAQ9C,GACN,IAAK,SACH8C,EAAenD,EAAM2C,QAAO,SAAAX,GAAI,OAAKA,EAAKpC,aAC1C,MACF,IAAK,YACHuD,EAAenD,EAAM2C,QAAO,SAAAX,GAAI,OAAIA,EAAKpC,aACzC,MACF,IAAK,MACL,QACEuD,EAAenD,EAGnB,OACE,6BAASoB,UAAU,WACjB,kBAAC,EAAD,CAAQ9B,QAAS6B,KAAK7B,UACtB,6BAAS8B,UAAU,QAChBpB,EAAM6C,OAAS,GAAK,kBAAC,EAAD,CAAW1C,UAAWgB,KAAKhB,YAChD,kBAAC,EAAD,CACEH,MAAOmD,EACPrD,YAAaqB,KAAKrB,YAClBC,WAAYoB,KAAKpB,cAGpBC,EAAM6C,OAAS,GACd,kBAAC,EAAD,CACE7C,MAAOA,EACPM,eAAgBa,KAAKb,eACrBF,aAAce,KAAKf,aACnBC,UAAWA,S,GA5FLuB,IAAMC,WCAxBuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.71bb05a5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const HeaderShape = PropTypes.shape({\n  addTodo: PropTypes.func,\n});\n\nexport const TodoShape = PropTypes.shape({\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  checkedTodo: PropTypes.func,\n  deleteTodo: PropTypes.func,\n});\n\nexport const TodoInputShape = PropTypes.shape({\n  addTodo: PropTypes.func,\n});\n\nexport const TodoListShape = PropTypes.shape({\n  todos: PropTypes.arrayOf(TodoShape.isRequired),\n  checkedTodo: PropTypes.func,\n  deleteTodo: PropTypes.func,\n});\n\nexport const ToggleAllShape = PropTypes.shape({\n  toggleAll: PropTypes.func,\n});\n\nexport const TodosFilterShape = PropTypes.shape({\n  setActiveTab: PropTypes.func,\n  activeTab: PropTypes.string,\n});\n\nexport const FooterShape = PropTypes.shape({\n  todos: PropTypes.arrayOf(TodoShape.isRequired),\n  clearCompleted: PropTypes.func,\n  setActiveTab: PropTypes.func,\n  activeTab: PropTypes.string,\n});\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { TodoInputShape } from '../../Shapes';\n\nexport class TodoInput extends React.Component {\n  state = {\n    title: '',\n    error: false,\n  }\n\n  setTitle = (value) => {\n    this.setState({\n      title: value.replace(/\\s/g, ' ').replace(/^\\s/, ''),\n      error: false,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title } = this.state;\n    const { addTodo } = this.props;\n\n    if (!title) {\n      this.setState({\n        error: true,\n      });\n\n      return false;\n    }\n\n    addTodo({\n      title,\n      id: uuidv4(),\n      completed: false,\n    });\n\n    this.setState({\n      title: '',\n      error: false,\n    });\n\n    return true;\n  }\n\n  render() {\n    const { title, error } = this.state;\n\n    return (\n      <>\n        {\n          error && (\n            <div className=\"form-error\">\n              Please add something\n            </div>\n          )\n        }\n        <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n          <input\n            type=\"text\"\n            name=\"todo\"\n            maxLength=\"100\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={event => this.setTitle(event.target.value)}\n          />\n        </form>\n      </>\n    );\n  }\n}\n\nTodoInput.propTypes = TodoInputShape.isRequired;\n","import React from 'react';\nimport { HeaderShape } from '../../Shapes';\nimport { TodoInput } from '../TodoInput/TodoInput';\n\nexport const Header = (props) => {\n  const { addTodo } = props;\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <TodoInput addTodo={addTodo} />\n    </header>\n  );\n};\n\nHeader.propTypes = HeaderShape.isRequired;\n","import React from 'react';\nimport { TodoShape } from '../../Shapes';\n\nexport const Todo = (props) => {\n  const {\n    todo: { id, title, completed },\n    checkedTodo,\n    deleteTodo,\n  } = props;\n\n  return (\n    <>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          name=\"todo\"\n          className=\"toggle\"\n          checked={completed}\n          id={id}\n          onChange={event => checkedTodo(event.target.id)}\n        />\n        <label htmlFor={id}>{title}</label>\n        <button\n          type=\"button\"\n          id={id}\n          className=\"destroy\"\n          onClick={event => deleteTodo(event.target.id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n      />\n    </>\n  );\n};\n\nTodo.propTypes = TodoShape.isRequired;\n","import React from 'react';\nimport { TodoListShape } from '../../Shapes';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = (props) => {\n  const { todos, checkedTodo, deleteTodo } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <li key={todo.id} className={`${todo.completed ? `completed` : ''}`}>\n          <Todo\n            todo={todo}\n            checkedTodo={checkedTodo}\n            deleteTodo={deleteTodo}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = TodoListShape.isRequired;\n","import React from 'react';\nimport { TodosFilterShape } from '../../Shapes';\n\nexport const TodosFilter = (props) => {\n  const { setActiveTab, activeTab } = props;\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          name=\"all\"\n          className={`${activeTab === 'all' ? 'selected' : ''}`}\n          onClick={event => setActiveTab(event.target.name)}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          name=\"active\"\n          className={`${activeTab === 'active' ? 'selected' : ''}`}\n          onClick={event => setActiveTab(event.target.name)}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          name=\"completed\"\n          className={`${activeTab === 'completed' ? 'selected' : ''}`}\n          onClick={event => setActiveTab(event.target.name)}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nTodosFilter.propTypes = TodosFilterShape.isRequired;\n","import React from 'react';\nimport { FooterShape } from '../../Shapes';\nimport { TodosFilter } from '../TodosFilter/TodosFilter';\n\nexport const Footer = (props) => {\n  const {\n    todos,\n    clearCompleted,\n    setActiveTab,\n    activeTab,\n  } = props;\n\n  const completedTodos = todos.filter(todo => todo.completed);\n  const uncompletedTodos = todos.filter(todo => !todo.completed);\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${uncompletedTodos.length} items left`}\n      </span>\n      <TodosFilter\n        setActiveTab={setActiveTab}\n        activeTab={activeTab}\n      />\n      {completedTodos.length > 0 && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={() => clearCompleted()}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = FooterShape.isRequired;\n","import React from 'react';\nimport { ToggleAllShape } from '../../Shapes';\n\nexport const ToggleAll = (props) => {\n  const { toggleAll } = props;\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onClick={toggleAll}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    </>\n  );\n};\n\nToggleAll.propTypes = ToggleAllShape.isRequired;\n","import React from 'react';\nimport { Header } from './components/Header/Header';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Footer } from './components/Footer/Footer';\nimport { ToggleAll } from './components/ToggleAll/ToggleAll';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    activeTab: '',\n    allSelected: true,\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        todo,\n      ],\n    }));\n  };\n\n  deleteTodo = (currentId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== currentId),\n    }));\n  }\n\n  checkedTodo = (currentId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === currentId) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  toggleAll = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: prevState.allSelected,\n      })),\n      allSelected: !prevState.allSelected,\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  setActiveTab = (name) => {\n    this.setState({\n      activeTab: name,\n    });\n  }\n\n  render() {\n    const { todos, activeTab } = this.state;\n\n    let visibleTodos = [];\n\n    switch (activeTab) {\n      case 'active':\n        visibleTodos = todos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        visibleTodos = todos.filter(todo => todo.completed);\n        break;\n      case 'all':\n      default:\n        visibleTodos = todos;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={this.addTodo} />\n        <section className=\"main\">\n          {todos.length > 0 && <ToggleAll toggleAll={this.toggleAll} />}\n          <TodoList\n            todos={visibleTodos}\n            checkedTodo={this.checkedTodo}\n            deleteTodo={this.deleteTodo}\n          />\n        </section>\n        {todos.length > 0 && (\n          <Footer\n            todos={todos}\n            clearCompleted={this.clearCompleted}\n            setActiveTab={this.setActiveTab}\n            activeTab={activeTab}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}